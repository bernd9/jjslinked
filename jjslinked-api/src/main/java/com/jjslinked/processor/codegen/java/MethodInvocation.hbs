private static class {{invocationClassName}} {

    {{#parameters}}
    private final {{providerClassName}} {{firstToLower providerClassName}} = new {{providerClassName}}();
    {{/parameters}}
    private final {{beanClassName}} {{firstToLower beanClassName}};

    {{invocationClassName}}({{beanClassName}} {{firstToLower beanClassName}}) {
        this.{{firstToLower beanClassName}} = {{firstToLower beanClassName}};
    }

    public void invoke(ClientMessage message) {
        ValidationExecutor validationExecutor = new ValidationExecutor();
        {{#parameters}}
        {{type}} {{varName}} = {{providerClassName}}.provide(message, validationExecutor);
        {{/parameters}}
        if (validationExecutor.validationOk()) {
            this.{{firstToLower beanClassName}}.{{methodName}}({{#iterate parameters ", "}}{{name}}{{/iterate}}});
        } else {
            throw new ValidationException(validationExecutor.getViolations());
        }

    }

    {{#parameterProviders}}
    {{.}}
    {{/parameterProviders}}
}