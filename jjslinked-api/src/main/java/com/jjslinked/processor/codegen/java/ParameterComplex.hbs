
    {{parameterType.className}} {{providerFunction}}(ClientMessage message) throws ValidationException {
        String parameter = {{validatorFunction1}}(message.getParameter("{{parameterName}}"));
        return {{validatorFunction2}}({{converterFunction}}(parameter));
    }

    {{parameterType.className}} {{converterFunction}}(String parameter) {
        return {{converter}}(parameter);
    }

    String {{validatorFunction1}}(String parameter) {
        {{#if validateNotNull}}if (parameter == null) throw new ValidationException("{{parameterName}}", NOT_NULL);{{/if}}
        {{#if validateRegExpr}}if (parameter != null && !parameter.matches("{{validateRegExpr}}")) throw new ValidationException("{{parameterName}}", REG_EXPR);{{/if}}
        return parameter;
    }

    {{parameterType.className}} {{validatorFunction2}}({{parameterType.className}} parameter) {
       {{#validators}}
       context.getBean({{className}}, Validator.class, {{parameterType.className}}).validate();
       {{/validators}}}
       return parameter;
    }